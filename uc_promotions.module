<?php
/**
 * @file Ubercart Promotions main module
 */

/**
 * Implements hook_permission
 * Valid permissions for this module
 */
function uc_promotions_permission() {
  return array(
    'access ubercart promotions' => array(
      'title' => t('Access Ubercart Promotions'), 
      'description' => t('Perform administration tasks for Ubercart Promotions.'),
    ),
  );
}

/**
 * Implements hook_menu
 *
 */
function uc_promotions_menu(){
  $items['admin/store/uc_promotions'] = array(
    'title' => t('Promotions'),
    'description' => t('Active promotions'),
    'access arguments' => array('access ubercart promotions'),
    'page callback' => 'uc_promotions_get_promos',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uc_promotions.inc',
  );
  
  $items['admin/store/uc_promotions/view'] = array(
    'title' => t('View promotions'),
    'description' => t('Active promotions'),
    'access arguments' => array('access ubercart promotions'),
    'page callback' => 'uc_promotions_get_promos',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uc_promotions.inc',
  );
  
  $items['admin/store/uc_promotions/create'] = array(
    'title' => t('Create a promotion'),
    'description' => t('In this area you can add a promotion'),
    'access arguments' => array('access ubercart promotions'),
    'page callback' => 'uc_promotions_create_promo',
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uc_promotions.inc',
  );
  
  $items['admin/store/uc_promotions/%uc_promotions_id/edit'] = array(
    'title' => t('Modifica promozione'),
    'description' => t('In this area you can edit a promotion'),
    'access arguments' => array('access ubercart promotions'),
    'page callback' => 'uc_promotions_edit_promo',
    'page arguments' => array(3),
    'type' => MENU_LOCAL_TASK,
    'file' => 'uc_promotions.inc',
  );
  
  return $items;
}

/*
 * Load a promo, called from wildcard menu item
 */
function uc_promotions_id_load($promo_id){
  $query = db_select('uc_promotions', 'p')
            ->fields('p', array('promoid', 'nid', 'price_limit', 'domain', 'status'))
            ->condition('promoid', $promo_id);
  
  $results = $query->execute();  

  
  $rows = array();
  foreach($results as $data){
    $rows['promoid'] = $data->promoid;
    $rows['nid'] = $data->nid;
    $rows['price_limit'] = $data->price_limit;
    $rows['domain'] = $data->domain;
    $rows['status'] = $data->status;
  }

  return $rows;
}

/**
 * Implements hook_uc_cart_alter
 * Inject a promotion inside the cart when a specific condition is satisfied
 */

function uc_promotions_uc_cart_alter(&$items) {
  //loading active promos
  $query = db_select('uc_promotions', 'p')
            ->fields('p', array('promoid', 'nid', 'price_limit', 'domain', 'status'))
            ->condition('status', 1);
  $results = $query->execute();

  foreach($results as $data){
    //applying the promotion
    uc_promotions_handler($data->nid, $data->price_limit, $data->domain, $items); 
  }

}

/**
 * Implements hook_uc_line_item()
 */
function uc_promotions_line_item(){
  $items[] = array(
    'id' => 'generic', 
    'title' => t('Empty line'), 
    'weight' => 2, 
    'default' => FALSE, 
    'stored' => TRUE, 
    'add_list' => TRUE, 
    'calculated' => TRUE, 
  );

  return $items;
}

/**
 * Promotion handler
 */
function uc_promotions_handler($nid, $price_limit, $domain, &$items){
  $domain = empty($domain) ? $_SERVER['HTTP_HOST'] : $domain ;
  if($_SERVER['HTTP_HOST'] != $domain){    
    return;
  }
  
  // Offer
  $promo_free_id = $nid;
  $promo_data = array("module" => "uc_product");
  
  //Check the current cart total and determine the total price
  $price = 0;
  foreach($items as $item){
    $price += ($item->qty * $item->price);
  }
  
  //Check for promo products inside list
  $item_check = 0;
  foreach($items as $item){
    
    if($item->nid == $promo_free_id) { 
      //Populate $item_check
      $item_check = 1;
      
      //Force the promotion qty to 1
      if($item->qty > 1){
        $item->qty = 1;
      }
    }
    
  }

  //Add the promotion
  if($price >= $price_limit && $item_check == 0){
    uc_cart_add_item($promo_free_id, $qty = 1, $data = NULL, $cid = NULL, $msg = "", $check_redirect = TRUE, $rebuild = TRUE);
  }
  
  //Remove the promotion
  if($price < $price_limit){
    uc_cart_remove_item($promo_free_id, null, $promo_data);
  }
}